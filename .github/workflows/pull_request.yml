name: Pull Request Check 

###  https://github.com/arita37/awesome-actions#static-analysis

on:
  workflow_dispatch:
    inputs:  

  pull_request:
    branches:
    - main2

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    #- uses: actions/checkout@v1
    #  ref: ${{ github.head_ref }
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
        
    - name: Set up Python 3.6.*
      uses: actions/setup-python@v1
      with:
        python-version: 3.6.*
      
    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
      
  
    - name: Cache pipenv virtualenv
      id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: /opt/hostedtoolcache/Python/
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**py36.txt') }}
          

    #- name: Install numpy
    #  if: steps.cache-pipenv.outputs.cache-hit != 'true'
    #  run: pip install numpy==1.18.2   pillow==6.2.1  scipy
      

    - name: Install repo requirements  1
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
           pip install -r  py36_min.txt


    - name: Install utilmy
      run:  |
        pip install -e .
        python -c "import utilmy"

           
    - name: Install repo requirements   2
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run:  |
        ls .
        pip install -r  py36.txt
        #pip install -r install/requirements_fake.txt




    - name: test_import
      run: |
           python -c "import os, pandas as pd; print(os)"
           python -c "import utilmy"        
        
        
    ########  Runs All test
    - name: setup test
      run: |
          mkdir -p    /home/runner/work/log_tmp/
          chmod -R 777 . 

    - name: test_all
      run: python test.py   test_all

    ################################################################
    - name: test_ppandas
      run: python test.py test_ppandas
    
    
    - name: test_docs_cli 
      run: python test.py test_docs_cli
    
    - name: test_text
      run: python test.py test_text

    - name: test_distributed
      run: python test.py test_distributed

    

    - name: test_oos 
      run: python test.py test_oos

    - name: test_utils
      run: python test.py test_utils
      
    - name: test_tabular
      run: python test.py test_tabular

    - name: test_adatasets
      run: python test.py test_adatasets

    - name: test_nnumpy 
      run: python test.py test_nnumpy

    - name: test_dates
      run: python test.py test_dates

    - name: test_decorators 
      run: python test.py test_decorators

    - name: test_utilmy
      run: python test.py test_utilmy

    - name: test_viz_vizhtml
      run:  python test.py   test_viz_vizhtml

    - name: test_parallel  
      run:  python test.py   test_parallel




          
    ########  Runs All test       
    - name: log_gitcommit
      run: |
           ls .
           
    ######### Git pull main branch ####################################################           
    #- uses: actions/checkout@v2
    #  with:
    #    ref: ${{ github.head_ref }}






# This Job will upload a Python Package using Twine when a release is created
  deploy:
    needs : [build] # List of dependent Jobs 
    if: success()   # check if all previous (needs) dependent jobs were successfull  then only execute
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build and publish
      #env:
      #  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        # echo "$TWINE_USERNAME"
        python run_pipy.py
        python setup.py sdist bdist_wheel
