uri,name,type,n_variable,n_words,n_words_unique,n_characters,avg_char_per_word,n_loop,n_ifthen,arg_name,arg_type,arg_value,line,docs,list_functions,n_functions
generate.py:exists,exists,function,2,5,5,18,3.6,0,0,['val'],[None],[None],64,[],[],0
train_dalle.py:exists,exists,function,2,5,5,18,3.6,0,0,['val'],[None],[None],141,[],[],0
train_dalle.py:get_trainable_params,get_trainable_params,function,3,8,8,65,8.12,1,0,['model'],[None],[None],144,[],['model.parameters'],1
train_dalle.py:cp_path_to_dir,cp_path_to_dir,function,9,17,14,194,11.41,0,2,"['cp_path', 'tag']","[None, None]","[None, None]",147,"['    """"""Convert a checkpoint path to a directory with `tag` inserted.\n', '    If `cp_path` is already a directory, return it unchanged.\n', '    """"""\n']","['isinstance', 'Path', 'cp_path.is_dir']",3
train_dalle.py:group_weight,group_weight,function,9,33,27,374,11.33,1,2,['model'],[None],[None],317,[],"['model.named_parameters', 'group_no_decay.append', 'group_decay.append', 'len', 'dict']",5
train_dalle.py:imagetransform,imagetransform,function,2,2,2,28,14.0,0,0,['b'],[None],[None],344,[],['Image.open'],1
train_dalle.py:tokenize,tokenize,function,4,5,5,107,21.4,0,0,['s'],[None],[None],347,[],"['tokenizer.tokenize', 's.decode']",2
train_dalle.py:save_model,save_model,function,19,88,68,1004,11.41,1,5,"['path', 'epoch']","[None, None]","[None, '0']",510,[],"['cp_path_to_dir', 'distr_backend.is_root_worker', 'sorted', 'shutil.rmtree', 'distr_dalle.save_checkpoint', 'torch.save', 'str', 'deepspeed_config.get', 'dalle.state_dict', 'opt.state_dict']",10
train_vae.py:save_model,save_model,function,14,29,25,339,11.69,0,2,['path'],[None],[None],196,[],"['Path', 'str', 'distr_vae.save_checkpoint', 'distr_backend.is_root_worker', 'vae.state_dict', 'torch.save']",6
dalle_pytorch/attention.py:exists,exists,function,2,5,5,18,3.6,0,0,['val'],[None],[None],13,[],[],0
dalle_pytorch/attention.py:uniq,uniq,function,3,6,6,32,5.33,1,0,['arr'],[None],[None],16,[],[],0
dalle_pytorch/attention.py:default,default,function,4,10,8,54,5.4,0,1,"['val', 'd']","[None, None]","[None, None]",19,[],"['exists', 'd', 'isfunction']",3
dalle_pytorch/attention.py:max_neg_value,max_neg_value,function,1,2,2,31,15.5,0,0,['t'],[None],[None],24,[],[],0
dalle_pytorch/attention.py:stable_softmax,stable_softmax,function,4,14,11,81,5.79,0,0,"['t', 'dim ', 'alpha ']","[None, None, None]","[None, ' -1', ' 32 ** 2']",27,[],['torch.amax'],1
dalle_pytorch/attention.py:apply_pos_emb,apply_pos_emb,function,7,12,12,102,8.5,0,0,"['pos_emb', 'qkv']","[None, None]","[None, None]",32,[],"['tuple', 'apply_rotary_emb']",2
dalle_pytorch/attention.py:Attention,Attention,class,52,179,120,1107,6.18,0,4,[],[],[],39,[],[],0
dalle_pytorch/attention.py:SparseConvCausalAttention,SparseConvCausalAttention,class,101,461,259,3048,6.61,0,2,[],[],[],90,[],[],0
dalle_pytorch/attention.py:SparseAxialCausalAttention,SparseAxialCausalAttention,class,101,428,233,2607,6.09,0,2,[],[],[],211,[],[],0
dalle_pytorch/attention.py:SparseAttention,SparseAttention,class,57,188,143,1585,8.43,0,4,[],[],[],325,[],[],0
dalle_pytorch/attention.py:Attention:__init__,Attention:__init__,method,17,28,25,270,9.64,0,0,"['self', 'dim', 'seq_len', 'causal ', 'heads ', 'dim_head ', 'dropout ', 'stable ']","[None, None, None, None, None, None, None, None]","[None, None, None, ' True', ' 8', ' 64', ' 0.', ' False']",40,[],"['super', 'nn.Linear', 'nn.Sequential', 'nn.Dropout']",4
dalle_pytorch/attention.py:Attention:forward,Attention:forward,method,38,130,78,699,5.38,0,4,"['self', 'x', 'mask ', 'rotary_pos_emb ']","[None, None, None, None]","[None, None, ' None', ' None']",56,[],"['self.to_qkv', 'map', 'rearrange', 'exists', 'apply_pos_emb', 'torch.einsum', 'max_neg_value', 'dots.masked_fill_', 'torch.ones', 'softmax', 'self.to_out']",11
dalle_pytorch/attention.py:SparseConvCausalAttention:__init__,SparseConvCausalAttention:__init__,method,21,42,39,375,8.93,0,0,"['self', 'dim', 'seq_len', 'image_size ', 'kernel_size ', 'dilation ', 'heads ', 'dim_head ', 'dropout ', 'stable ', '**kwargs']","[None, None, None, None, None, None, None, None, None, None, None]","[None, None, None, ' 32', ' 5', ' 1', ' 8', ' 64', ' 0.', ' False', None]",91,[],"['super', 'nn.Linear', 'nn.Sequential', 'nn.Dropout']",4
dalle_pytorch/attention.py:SparseConvCausalAttention:forward,SparseConvCausalAttention:forward,method,83,393,205,2499,6.36,0,2,"['self', 'x', 'mask ', 'rotary_pos_emb ']","[None, None, None, None]","[None, None, ' None', ' None']",56,[],"['default', 'torch.ones', 'F.pad', 'self.to_qkv', 'map', 'rearrange', 'exists', 'apply_pos_emb', 'einsum', 'max_neg_value', 'dots_text.masked_fill_', 'softmax', 'F.unfold', 'torch.arange', 'repeat', 'torch.cat', 'dots.masked_fill_', 'self.to_out']",18
dalle_pytorch/attention.py:SparseAxialCausalAttention:__init__,SparseAxialCausalAttention:__init__,method,22,46,42,359,7.8,0,0,"['self', 'dim', 'seq_len', 'image_size ', 'axis ', 'heads ', 'dim_head ', 'dropout ', 'stable ', '**kwargs']","[None, None, None, None, None, None, None, None, None, None]","[None, None, None, ' 32', ' 0', ' 8', ' 64', ' 0.', ' False', None]",212,[],"['super', 'nn.Linear', 'nn.Sequential', 'nn.Dropout']",4
dalle_pytorch/attention.py:SparseAxialCausalAttention:forward,SparseAxialCausalAttention:forward,method,82,358,179,2092,5.84,0,2,"['self', 'x', 'mask ', 'rotary_pos_emb ']","[None, None, None, None]","[None, None, ' None', ' None']",56,[],"['default', 'torch.ones', 'F.pad', 'self.to_qkv', 'map', 'rearrange', 'exists', 'apply_pos_emb', 'einsum', 'max_neg_value', 'dots_text.masked_fill_', 'softmax', 'torch.cat', 'repeat', 'dots.masked_fill_', 'self.to_out']",16
dalle_pytorch/attention.py:SparseAttention:__init__,SparseAttention:__init__,method,16,43,40,592,13.77,0,0,"['self', '*args', 'block_size ', 'text_seq_len ', 'num_random_blocks ', '**kwargs']","[None, None, None, None, None, None]","[None, None, ' 16', ' 256', ' None', None]",326,[],"['super', 'default', 'list', 'SparseSelfAttention', 'VariableSparsityConfig']",5
dalle_pytorch/attention.py:SparseAttention:forward,SparseAttention:forward,method,42,126,90,847,6.72,0,4,"['self', 'x', 'mask ', 'rotary_pos_emb ']","[None, None, None, None]","[None, None, ' None', ' None']",56,[],"['default', 'torch.ones', 'F.pad', 'self.to_qkv', 'map', 'rearrange', 'exists', 'apply_pos_emb', 'torch.zeros', 'max_neg_value', 'attn_mask.masked_fill_', 'self.attn_fn', 'self.to_out']",13
dalle_pytorch/dalle_pytorch.py:exists,exists,function,2,5,5,18,3.6,0,0,['val'],[None],[None],16,[],[],0
dalle_pytorch/dalle_pytorch.py:default,default,function,3,6,6,27,4.5,0,1,"['val', 'd']","[None, None]","[None, None]",19,[],['exists'],1
dalle_pytorch/dalle_pytorch.py:is_empty,is_empty,function,2,3,3,21,7.0,0,0,['t'],[None],[None],28,[],['t.nelement'],1
dalle_pytorch/dalle_pytorch.py:masked_mean,masked_mean,function,4,11,11,80,7.27,0,0,"['t', 'mask', 'dim ']","[None, None, None]","[None, None, ' 1']",31,[],"['t.masked_fill', 't.sum', 'mask.sum']",3
dalle_pytorch/dalle_pytorch.py:set_requires_grad,set_requires_grad,function,4,6,6,55,9.17,1,0,"['model', 'value']","[None, None]","[None, None]",35,[],['model.parameters'],1
dalle_pytorch/dalle_pytorch.py:eval_decorator,eval_decorator,function,8,16,14,149,9.31,0,0,['fn'],[None],[None],39,[],"['inner', 'model.eval', 'fn', 'model.train']",4
dalle_pytorch/dalle_pytorch.py:top_k,top_k,function,11,19,18,173,9.11,0,0,"['logits', 'thres ']","[None, None]","[None, ' 0.5']",50,[],"['max', 'torch.topk', 'torch.full_like', 'float', 'probs.scatter_']",5
dalle_pytorch/dalle_pytorch.py:always,always,class,5,12,10,86,7.17,0,0,[],[],[],22,[],[],0
dalle_pytorch/dalle_pytorch.py:ResBlock,ResBlock,class,8,28,19,221,7.89,0,0,[],[],[],60,[],[],0
dalle_pytorch/dalle_pytorch.py:DiscreteVAE,DiscreteVAE,class,108,389,267,3766,9.68,4,8,[],[],[],74,[],[],0
dalle_pytorch/dalle_pytorch.py:CLIP,CLIP,class,50,229,173,2297,10.03,0,2,[],[],[],229,[],[],0
dalle_pytorch/dalle_pytorch.py:DALLE,DALLE,class,158,703,440,6774,9.64,4,11,[],[],[],309,[],[],0
dalle_pytorch/dalle_pytorch.py:always:__init__,always:__init__,method,2,2,2,12,6.0,0,0,"['self', 'val']","[None, None]","[None, None]",23,[],[],0
dalle_pytorch/dalle_pytorch.py:always:__call__,always:__call__,method,2,2,2,14,7.0,0,0,"['self', 'x', '*args', '**kwargs']","[None, None, None, None]","[None, None, None, None]",25,[],[],0
dalle_pytorch/dalle_pytorch.py:ResBlock:__init__,ResBlock:__init__,method,5,19,11,157,8.26,0,0,"['self', 'chan']","[None, None]","[None, None]",61,[],"['super', 'nn.Sequential', 'nn.Conv2d', 'nn.ReLU']",4
dalle_pytorch/dalle_pytorch.py:ResBlock:forward,ResBlock:forward,method,2,3,3,19,6.33,0,0,"['self', 'x']","[None, None]","[None, None]",71,[],['self.net'],1
dalle_pytorch/dalle_pytorch.py:DiscreteVAE:__init__,DiscreteVAE:__init__,method,45,134,109,1537,11.47,2,3,"['self', 'image_size ', 'num_tokens ', 'codebook_dim ', 'num_layers ', 'num_resnet_blocks ', 'hidden_dim ', 'channels ', 'smooth_l1_loss ', 'temperature ', 'straight_through ', 'kl_div_loss_weight ', '(0.5', ') * 3', '(0.5', ') * 3)']","[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]","[None, ' 256', ' 512', ' 512', ' 3', ' 0', ' 64', ' 3', ' False', ' 0.9', ' False', ' 0.', None, None, None, None]",75,[],"['super', 'log2', 'nn.Embedding', 'list', 'map', 'zip', 'enc_layers.append', 'nn.ReLU', 'dec_layers.append', 'range', 'dec_layers.insert', 'ResBlock', 'nn.Conv2d', 'nn.Sequential', 'self._register_external_parameters']",15
dalle_pytorch/dalle_pytorch.py:DiscreteVAE:_register_external_parameters,DiscreteVAE:_register_external_parameters,method,4,14,13,244,17.43,0,1,['self'],[None],[None],142,"['        """"""Register external parameters for DeepSpeed partitioning.""""""\n']",['distributed_utils.using_backend'],1
dalle_pytorch/dalle_pytorch.py:DiscreteVAE:norm,DiscreteVAE:norm,method,8,29,22,246,8.48,0,1,"['self', 'images']","[None, None]","[None, None]",154,[],"['exists', 'map', 'torch.as_tensor', 'rearrange', 'images.clone', 'images.sub_']",6
dalle_pytorch/dalle_pytorch.py:DiscreteVAE:get_codebook_indices,DiscreteVAE:get_codebook_indices,method,4,9,8,110,12.22,0,0,"['self', 'images']","[None, None]","[None, None]",166,[],"['self', 'logits.argmax']",2
dalle_pytorch/dalle_pytorch.py:DiscreteVAE:decode,DiscreteVAE:decode,method,12,28,21,184,6.57,0,0,"['self', 'img_seq']","[None, None]","[None, None]",171,[],"['self.codebook', 'int', 'rearrange', 'self.decoder']",4
dalle_pytorch/dalle_pytorch.py:DiscreteVAE:forward,DiscreteVAE:forward,method,45,116,91,928,8.0,2,3,"['self', 'img', 'return_loss ', 'return_recons ', 'return_logits ', 'temp ']","[None, None, None, None, None, None]","[None, None, ' False', ' False', ' False', ' None']",183,[],"['self.norm', 'self.encoder', 'default', 'F.gumbel_softmax', 'einsum', 'self.decoder', 'self.loss_fn', 'rearrange', 'F.log_softmax', 'torch.log', 'F.kl_div']",11
dalle_pytorch/dalle_pytorch.py:CLIP:__init__,CLIP:__init__,method,20,74,60,886,11.97,0,0,"['self', '*', 'dim_text ', 'dim_image ', 'dim_latent ', 'num_text_tokens ', 'text_enc_depth ', 'text_seq_len ', 'text_heads ', 'num_visual_tokens ', 'visual_enc_depth ', 'visual_heads ', 'visual_image_size ', 'visual_patch_size ', 'channels ']","[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]","[None, None, ' 512', ' 512', ' 512', ' 10000', ' 6', ' 256', ' 8', ' 512', ' 6', ' 8', ' 256', ' 32', ' 3']",75,[],"['super', 'nn.Embedding', 'Transformer', 'nn.Linear', 'nn.Parameter']",5
dalle_pytorch/dalle_pytorch.py:CLIP:forward,CLIP:forward,method,37,114,86,1084,9.51,0,2,"['self', 'text', 'image', 'text_mask ', 'return_loss ']","[None, None, None, None, None]","[None, None, None, ' None', ' False']",183,[],"['self.text_emb', 'self.text_pos_emb', 'rearrange', 'self.to_visual_embedding', 'self.visual_pos_emb', 'self.text_transformer', 'self.visual_transformer', 'exists', 'masked_mean', 'enc_text.mean', 'enc_image.mean', 'self.to_text_latent', 'self.to_visual_latent', 'map', 'F.normalize', 'einsum', 'torch.arange', 'F.cross_entropy']",18
dalle_pytorch/dalle_pytorch.py:DALLE:__init__,DALLE:__init__,method,58,193,159,1960,10.16,2,1,"['self', '*', 'dim', 'vae', 'num_text_tokens ', 'text_seq_len ', 'depth', 'heads ', 'dim_head ', 'reversible ', 'attn_dropout ', 'ff_dropout ', 'sparse_attn ', 'attn_types ', 'loss_img_weight ', 'stable ', 'shift_tokens ', 'rotary_emb ']","[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]","[None, None, None, None, ' 10000', ' 256', None, ' 8', ' 64', ' False', ' 0.', ' 0', ' False', ' None', ' 7', ' False', ' True', ' True']",75,[],"['super', 'isinstance', 'nn.Embedding', 'always', 'AxialPositionalEmbedding', 'set_requires_grad', 'Transformer', 'DivideMax', 'nn.Sequential', 'nn.LayerNorm', 'nn.Linear', 'torch.arange', 'rearrange', 'self.register_buffer']",14
dalle_pytorch/dalle_pytorch.py:DALLE:generate_texts,DALLE:generate_texts,method,38,79,68,1077,13.63,1,2,"['self', 'tokenizer', 'text ', '*', 'filter_thres ', 'temperature ']","[None, None, None, None, None, None]","[None, None, ' None', None, ' 0.5', ' 1.']",405,[],"['torch.tensor', 'range', 'self.text_emb', 'self.text_pos_emb', 'self.transformer', 'self.norm_by_max', 'self.to_logits', 'logits.masked_fill_', 'top_k', 'F.softmax', 'torch.multinomial', 'torch.cat', 'set']",13
dalle_pytorch/dalle_pytorch.py:DALLE:generate_images,DALLE:generate_images,method,59,183,138,1433,7.83,1,3,"['self', 'text', '*', 'clip ', 'mask ', 'filter_thres ', 'temperature ', 'img ', 'num_init_img_tokens ']","[None, None, None, None, None, None, None, None, None]","[None, None, None, ' None', ' None', ' 0.5', ' 1.', ' None', ' None']",453,[],"['exists', 'vae.get_codebook_indices', 'default', 'int', 'torch.cat', 'range', 'self', 'top_k', 'F.softmax', 'torch.multinomial', 'F.pad', 'vae.decode', 'clip']",13
dalle_pytorch/dalle_pytorch.py:DALLE:forward,DALLE:forward,method,60,169,130,1694,10.02,0,5,"['self', 'text', 'image ', 'mask ', 'return_loss ']","[None, None, None, None, None]","[None, None, ' None', ' None', ' False']",183,[],"['torch.arange', 'torch.where', 'F.pad', 'self.text_emb', 'self.text_pos_emb', 'exists', 'is_empty', 'len', 'tuple', 'self.image_emb', 'self.image_pos_emb', 'torch.cat', 'self.transformer', 'self.norm_by_max', 'self.to_logits', 'logits.masked_fill_', 'rearrange', 'F.cross_entropy']",18
dalle_pytorch/distributed_utils.py:wrap_arg_parser,wrap_arg_parser,function,6,24,23,238,9.92,1,0,['parser'],[None],[None],34,"['    """"""Add arguments to support optional distributed backend usage.""""""\n']","['parser.add_argument', 'distr_backend.wrap_arg_parser']",2
dalle_pytorch/distributed_utils.py:set_backend_from_args,set_backend_from_args,function,17,57,44,631,11.07,1,4,['args'],[None],[None],48,"['    """"""Set and return the backend based on the given `args`.""""""\n']","['backend.has_backend', 'ModuleNotFoundError', 'print', 'ValueError']",4
dalle_pytorch/distributed_utils.py:require_set_backend,require_set_backend,function,2,22,19,132,6.0,0,0,[],[],[],79,"['    """"""Raise an `AssertionError` when the backend has not been set.""""""\n']",[],0
dalle_pytorch/distributed_utils.py:using_backend,using_backend,function,5,10,9,133,13.3,0,1,['test_backend'],[None],[None],87,"['    """"""Return whether the backend is set to `test_backend`.\n', '\n', '    `test_backend` may be a string of the name of the backend or\n', '    its class.\n', '    """"""\n']","['require_set_backend', 'isinstance']",2
dalle_pytorch/loader.py:TextImageDataset,TextImageDataset,class,57,192,135,2108,10.98,4,2,[],[],[],10,[],[],0
dalle_pytorch/loader.py:TextImageDataset:__init__,TextImageDataset:__init__,method,29,83,62,825,9.94,4,0,"['self', 'folder', 'text_len', 'image_size', 'truncate_captions', 'resize_ratio', 'tokenizer', 'shuffle']","[None, None, None, None, None, None, None, None]","[None, None, '256', '128', 'False', '0.75', 'None', 'False']",11,"['        """"""\n', '        @param folder: Folder containing images and text files matched by their paths\' respective ""stem""\n', '        @param truncate_captions: Rather than throw an exception, captions which are too long will be truncated.\n', '        """"""\n']","['super', 'Path', 'text_files.keys', 'list', 'text_files.items', 'image_files.items', 'T.Compose', 'T.Lambda', 'img.convert', 'T.RandomResizedCrop', 'T.ToTensor']",11
dalle_pytorch/loader.py:TextImageDataset:__len__,TextImageDataset:__len__,method,1,2,2,20,10.0,0,0,['self'],[None],[None],55,[],['len'],1
dalle_pytorch/loader.py:TextImageDataset:random_sample,TextImageDataset:random_sample,method,2,4,4,51,12.75,0,0,['self'],[None],[None],58,[],"['self.__getitem__', 'self.__len__']",2
dalle_pytorch/loader.py:TextImageDataset:sequential_sample,TextImageDataset:sequential_sample,method,4,9,8,80,8.89,0,1,"['self', 'ind']","[None, None]","[None, None]",61,[],"['self.__len__', 'self.__getitem__']",2
dalle_pytorch/loader.py:TextImageDataset:skip_sample,TextImageDataset:skip_sample,method,4,6,5,80,13.33,0,1,"['self', 'ind']","[None, None]","[None, None]",66,[],"['self.random_sample', 'self.sequential_sample']",2
dalle_pytorch/loader.py:TextImageDataset:__getitem__,TextImageDataset:__getitem__,method,20,65,47,788,12.12,0,0,"['self', 'ind']","[None, None]","[None, None]",71,[],"['text_file.read_text', 'list', 'len', 'choice', 'print', 'self.skip_sample', 'self.image_transform']",7
dalle_pytorch/reversible.py:route_args,route_args,function,12,49,38,368,7.51,3,0,"['router', 'args', 'depth']","[None, None, None]","[None, None, None]",8,[],"['dict', 'range', 'args.keys', 'enumerate', 'map']",5
dalle_pytorch/reversible.py:Deterministic,Deterministic,class,22,60,43,720,12.0,0,5,[],[],[],20,[],[],0
dalle_pytorch/reversible.py:ReversibleBlock,ReversibleBlock,class,39,125,76,932,7.46,0,0,[],[],[],54,[],[],0
dalle_pytorch/reversible.py:_ReversibleFunction,_ReversibleFunction,class,21,46,38,321,6.98,2,0,[],[],[],108,[],[],0
dalle_pytorch/reversible.py:SequentialSequence,SequentialSequence,class,17,64,55,507,7.92,1,0,[],[],[],126,[],[],0
dalle_pytorch/reversible.py:ReversibleSequence,ReversibleSequence,class,16,45,42,434,9.64,0,0,[],[],[],143,[],[],0
dalle_pytorch/reversible.py:Deterministic:__init__,Deterministic:__init__,method,7,11,9,116,10.55,0,0,"['self', 'net']","[None, None]","[None, None]",21,[],['super'],1
dalle_pytorch/reversible.py:Deterministic:record_rng,Deterministic:record_rng,method,7,9,9,143,15.89,0,1,"['self', '*args']","[None, None]","[None, None]",29,[],"['torch.get_rng_state', 'get_device_states']",2
dalle_pytorch/reversible.py:Deterministic:forward,Deterministic:forward,method,12,26,19,345,13.27,0,4,"['self', '*args', 'record_rng ', 'set_rng ', '**kwargs']","[None, None, None, None, None]","[None, None, ' False', ' False', None]",35,[],"['self.record_rng', 'self.net', 'torch.set_rng_state', 'set_device_states']",4
dalle_pytorch/reversible.py:ReversibleBlock:__init__,ReversibleBlock:__init__,method,4,5,5,66,13.2,0,0,"['self', 'f', 'g']","[None, None, None]","[None, None, None]",55,[],"['super', 'Deterministic']",2
dalle_pytorch/reversible.py:ReversibleBlock:forward,ReversibleBlock:forward,method,14,25,22,198,7.92,0,0,"['self', 'x', 'f_args ', 'g_args ']","[None, None, None, None]","[None, None, ' {}', ' {}']",60,[],"['torch.chunk', 'torch.no_grad', 'self.f', 'self.g', 'torch.cat']",5
dalle_pytorch/reversible.py:ReversibleBlock:backward_pass,ReversibleBlock:backward_pass,method,32,76,53,554,7.29,0,0,"['self', 'y', 'dy', 'f_args ', 'g_args ']","[None, None, None, None, None]","[None, None, None, ' {}', ' {}']",70,[],"['torch.chunk', 'torch.enable_grad', 'self.g', 'torch.no_grad', 'self.f', 'torch.cat', 'x2.detach']",7
dalle_pytorch/reversible.py:_ReversibleFunction:forward,_ReversibleFunction:forward,method,12,17,16,109,6.41,1,0,"['ctx', 'x', 'blocks', 'args']","[None, None, None, None]","[None, None, None, None]",110,[],"['zip', 'block', 'x.detach']",3
dalle_pytorch/reversible.py:_ReversibleFunction:backward,_ReversibleFunction:backward,method,13,19,18,131,6.89,1,0,"['ctx', 'dy']","[None, None]","[None, None]",119,[],"['zip', 'block.backward_pass']",2
dalle_pytorch/reversible.py:SequentialSequence:__init__,SequentialSequence:__init__,method,8,29,27,233,8.03,0,0,"['self', 'layers', 'args_route ', 'layer_dropout ']","[None, None, None, None]","[None, None, ' {}', ' 0.']",127,[],"['super', 'all', 'len', 'args_route.values']",4
dalle_pytorch/reversible.py:SequentialSequence:forward,SequentialSequence:forward,method,7,24,20,187,7.79,1,0,"['self', 'x', '**kwargs']","[None, None, None]","[None, None, None]",134,[],"['route_args', 'len', 'list', 'f', 'g']",5
dalle_pytorch/reversible.py:ReversibleSequence:__init__,ReversibleSequence:__init__,method,5,11,11,113,10.27,0,0,"['self', 'blocks', 'args_route ']","[None, None, None]","[None, None, ' {}']",144,[],"['super', 'nn.ModuleList']",2
dalle_pytorch/reversible.py:ReversibleSequence:forward,ReversibleSequence:forward,method,10,25,24,251,10.04,0,0,"['self', 'x', '**kwargs']","[None, None, None]","[None, None, None]",134,[],"['torch.cat', 'route_args', 'len', 'list', '_ReversibleFunction.apply', 'torch.stack']",6
dalle_pytorch/tokenizer.py:default_bpe,default_bpe,function,2,3,3,95,31.67,0,0,[],[],[],21,[],[],0
dalle_pytorch/tokenizer.py:bytes_to_unicode,bytes_to_unicode,function,9,42,33,224,5.33,1,1,[],[],[],25,[],"['list', 'ord', 'range', 'bs.append', 'cs.append', 'dict']",6
dalle_pytorch/tokenizer.py:get_pairs,get_pairs,function,7,14,12,103,7.36,1,0,['word'],[None],[None],37,[],"['set', 'pairs.add']",2
dalle_pytorch/tokenizer.py:basic_clean,basic_clean,function,5,6,5,83,13.83,0,0,['text'],[None],[None],45,[],"['ftfy.fix_text', 'html.unescape', 'text.strip']",3
dalle_pytorch/tokenizer.py:whitespace_clean,whitespace_clean,function,4,9,7,56,6.22,0,0,['text'],[None],[None],50,[],"['re.sub', 'text.strip']",2
dalle_pytorch/tokenizer.py:SimpleTokenizer,SimpleTokenizer,class,69,290,188,2657,9.16,8,11,[],[],[],55,[],[],0
dalle_pytorch/tokenizer.py:HugTokenizer,HugTokenizer,class,35,106,82,1056,9.96,2,5,[],[],[],158,[],[],0
dalle_pytorch/tokenizer.py:ChineseTokenizer,ChineseTokenizer,class,30,90,69,918,10.2,2,5,[],[],[],196,[],[],0
dalle_pytorch/tokenizer.py:YttmTokenizer,YttmTokenizer,class,31,92,79,969,10.53,1,4,[],[],[],232,[],[],0
dalle_pytorch/tokenizer.py:SimpleTokenizer:__init__,SimpleTokenizer:__init__,method,22,65,47,788,12.12,3,0,"['self', 'bpe_path ']","[None, None]","[None, ' default_bpe(']",56,[],"['bytes_to_unicode', 'Path', 'list', 'vocab.append', 'vocab.extend', 'dict', 'range', 're.compile']",8
dalle_pytorch/tokenizer.py:SimpleTokenizer:bpe,SimpleTokenizer:bpe,method,23,93,64,676,7.27,2,5,"['self', 'token']","[None, None]","[None, None]",78,[],"['tuple', 'get_pairs', 'min', 'float', 'len', 'word.index', 'new_word.extend', 'new_word.append']",8
dalle_pytorch/tokenizer.py:SimpleTokenizer:encode,SimpleTokenizer:encode,method,7,23,17,261,11.35,1,0,"['self', 'text']","[None, None]","[None, None]",119,[],"['whitespace_clean', 're.findall', 'token.encode', 'bpe_tokens.extend', 'self.bpe']",5
dalle_pytorch/tokenizer.py:SimpleTokenizer:decode,SimpleTokenizer:decode,method,8,41,23,313,7.63,1,3,"['self', 'tokens', 'remove_start_end ', 'pad_tokens ']","[None, None, None, None]","[None, None, ' True', ' {}']",127,[],"['torch.is_tensor', 'tokens.tolist', 'bytearray']",3
dalle_pytorch/tokenizer.py:SimpleTokenizer:tokenize,SimpleTokenizer:tokenize,method,13,44,37,407,9.25,1,3,"['self', 'texts', 'context_length ', 'truncate_text ']","[None, None, None, None]","[None, None, ' 256', ' False']",137,[],"['isinstance', 'torch.zeros', 'enumerate', 'len', 'RuntimeError', 'torch.tensor']",6
dalle_pytorch/tokenizer.py:HugTokenizer:__init__,HugTokenizer:__init__,method,10,20,20,256,12.8,0,0,"['self', 'bpe_path ']","[None, None]","[None, ' None']",159,[],"['Path', 'bpe_path.exists', 'Tokenizer.from_file', 'ByteLevel', 'tokenizer.get_vocab_size']",5
dalle_pytorch/tokenizer.py:HugTokenizer:decode,HugTokenizer:decode,method,9,21,16,196,9.33,1,2,"['self', 'tokens', 'pad_tokens ']","[None, None, None]","[None, None, ' {}']",167,[],"['torch.is_tensor', 'tokens.tolist', 'pad_tokens.union']",3
dalle_pytorch/tokenizer.py:HugTokenizer:encode,HugTokenizer:encode,method,2,2,2,37,18.5,0,0,"['self', 'text']","[None, None]","[None, None]",119,[],[],0
dalle_pytorch/tokenizer.py:HugTokenizer:tokenize,HugTokenizer:tokenize,method,13,44,37,407,9.25,1,3,"['self', 'texts', 'context_length ', 'truncate_text ']","[None, None, None, None]","[None, None, ' 256', ' False']",137,[],"['isinstance', 'torch.zeros', 'enumerate', 'len', 'RuntimeError', 'torch.tensor']",6
dalle_pytorch/tokenizer.py:ChineseTokenizer:__init__,ChineseTokenizer:__init__,method,5,6,6,122,20.33,0,0,['self'],[None],[None],197,[],['BertTokenizer.from_pretrained'],1
dalle_pytorch/tokenizer.py:ChineseTokenizer:decode,ChineseTokenizer:decode,method,9,19,14,171,9.0,1,2,"['self', 'tokens', 'pad_tokens ']","[None, None, None]","[None, None, ' {}']",167,[],"['torch.is_tensor', 'tokens.tolist', 'pad_tokens.union']",3
dalle_pytorch/tokenizer.py:ChineseTokenizer:encode,ChineseTokenizer:encode,method,2,4,4,72,18.0,0,0,"['self', 'text']","[None, None]","[None, None]",119,[],['torch.tensor'],1
dalle_pytorch/tokenizer.py:ChineseTokenizer:tokenize,ChineseTokenizer:tokenize,method,13,44,37,407,9.25,1,3,"['self', 'texts', 'context_length ', 'truncate_text ']","[None, None, None, None]","[None, None, ' 256', ' False']",137,[],"['isinstance', 'torch.zeros', 'enumerate', 'len', 'RuntimeError', 'torch.tensor']",6
dalle_pytorch/tokenizer.py:YttmTokenizer:__init__,YttmTokenizer:__init__,method,8,18,18,193,10.72,0,0,"['self', 'bpe_path ']","[None, None]","[None, ' None']",159,[],"['Path', 'bpe_path.exists', 'yttm.BPE', 'str', 'tokenizer.vocab_size']",5
dalle_pytorch/tokenizer.py:YttmTokenizer:decode,YttmTokenizer:decode,method,5,8,8,118,14.75,0,1,"['self', 'tokens', 'pad_tokens ']","[None, None, None]","[None, None, ' {}']",167,[],"['torch.is_tensor', 'tokens.tolist', 'pad_tokens.union']",3
dalle_pytorch/tokenizer.py:YttmTokenizer:encode,YttmTokenizer:encode,method,3,7,7,105,15.0,0,0,"['self', 'texts']","[None, None]","[None, None]",247,[],['list'],1
dalle_pytorch/tokenizer.py:YttmTokenizer:tokenize,YttmTokenizer:tokenize,method,14,40,35,392,9.8,1,3,"['self', 'texts', 'context_length ', 'truncate_text ']","[None, None, None, None]","[None, None, ' 256', ' False']",137,[],"['isinstance', 'self.encode', 'torch.zeros', 'enumerate', 'len', 'RuntimeError', 'torch.tensor']",7
dalle_pytorch/transformer.py:exists,exists,function,2,5,5,18,3.6,0,0,['val'],[None],[None],17,[],[],0
dalle_pytorch/transformer.py:default,default,function,3,6,6,27,4.5,0,1,"['val', 'd']","[None, None]","[None, None]",20,[],['exists'],1
dalle_pytorch/transformer.py:cast_tuple,cast_tuple,function,4,13,10,87,6.69,0,2,"['val', 'depth ']","[None, None]","[None, ' 1']",23,[],"['isinstance', 'tuple']",2
dalle_pytorch/transformer.py:DivideMax,DivideMax,class,9,17,15,128,7.53,0,0,[],[],[],30,[],[],0
dalle_pytorch/transformer.py:LayerScale,LayerScale,class,13,39,33,287,7.36,0,1,[],[],[],40,[],[],0
dalle_pytorch/transformer.py:PreNorm,PreNorm,class,8,16,15,149,9.31,0,0,[],[],[],58,[],[],0
dalle_pytorch/transformer.py:GEGLU,GEGLU,class,7,11,11,67,6.09,0,0,[],[],[],69,[],[],0
dalle_pytorch/transformer.py:FeedForward,FeedForward,class,9,25,23,205,8.2,0,0,[],[],[],74,[],[],0
dalle_pytorch/transformer.py:PreShiftToken,PreShiftToken,class,36,121,79,913,7.55,0,0,[],[],[],89,[],[],0
dalle_pytorch/transformer.py:Transformer,Transformer,class,54,342,227,3086,9.02,1,5,[],[],[],130,[],[],0
dalle_pytorch/transformer.py:DivideMax:__init__,DivideMax:__init__,method,3,3,3,31,10.33,0,0,"['self', 'dim']","[None, None]","[None, None]",31,[],['super'],1
dalle_pytorch/transformer.py:DivideMax:forward,DivideMax:forward,method,4,8,7,53,6.62,0,0,"['self', 'x']","[None, None]","[None, None]",35,[],['x.amax'],1
dalle_pytorch/transformer.py:LayerScale:__init__,LayerScale:__init__,method,10,26,22,189,7.27,0,1,"['self', 'dim', 'depth', 'fn']","[None, None, None, None]","[None, None, None, None]",41,[],"['super', 'torch.zeros', 'nn.Parameter']",3
dalle_pytorch/transformer.py:LayerScale:forward,LayerScale:forward,method,2,4,4,36,9.0,0,0,"['self', 'x', '**kwargs']","[None, None, None]","[None, None, None]",53,[],['self.fn'],1
dalle_pytorch/transformer.py:PreNorm:__init__,PreNorm:__init__,method,5,5,5,57,11.4,0,0,"['self', 'dim', 'fn']","[None, None, None]","[None, None, None]",59,[],"['super', 'nn.LayerNorm']",2
dalle_pytorch/transformer.py:PreNorm:forward,PreNorm:forward,method,2,3,3,36,12.0,0,0,"['self', 'x', '**kwargs']","[None, None, None]","[None, None, None]",53,[],['self.fn'],1
dalle_pytorch/transformer.py:GEGLU:forward,GEGLU:forward,method,6,8,8,47,5.88,0,0,"['self', 'x']","[None, None]","[None, None]",35,[],"['x.chunk', 'F.gelu']",2
dalle_pytorch/transformer.py:FeedForward:__init__,FeedForward:__init__,method,6,13,13,125,9.62,0,0,"['self', 'dim', 'dropout ', 'mult ']","[None, None, None, None]","[None, None, ' 0.', ' 4.']",75,[],"['super', 'nn.Sequential', 'nn.Linear', 'GEGLU', 'nn.Dropout']",5
dalle_pytorch/transformer.py:FeedForward:forward,FeedForward:forward,method,2,2,2,17,8.5,0,0,"['self', 'x']","[None, None]","[None, None]",35,[],['self.net'],1
dalle_pytorch/transformer.py:PreShiftToken:__init__,PreShiftToken:__init__,method,7,7,7,77,11.0,0,0,"['self', 'fn', 'image_size', 'seq_len']","[None, None, None, None]","[None, None, None, None]",90,[],['super'],1
dalle_pytorch/transformer.py:PreShiftToken:forward,PreShiftToken:forward,method,31,105,64,765,7.29,0,0,"['self', 'x', '**kwargs']","[None, None, None]","[None, None, None]",53,[],"['F.pad', 'rearrange', 'x_text.chunk', 'torch.cat', 'x_img.chunk', 'self.fn']",6
dalle_pytorch/transformer.py:Transformer:__init__,Transformer:__init__,method,51,299,196,2750,9.2,1,5,"['self', '*', 'dim', 'depth', 'seq_len', 'reversible ', 'causal ', 'heads ', 'dim_head ', 'ff_mult ', 'attn_dropout ', 'ff_dropout ', 'attn_types ', 'image_fmap_size ', 'sparse_attn ', 'stable ', 'shift_tokens ', 'rotary_emb ']","[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]","[None, None, None, None, None, ' False', ' True', ' 8', ' 64', ' 4', ' 0.', ' 0.', ' None', ' None', ' False', ' False', ' True', ' True']",131,[],"['super', 'nn.ModuleList', 'cast_tuple', 'default', 'islice', 'zip', 'partial', 'ValueError', 'attn_class', 'FeedForward', 'map', 'PreShiftToken', 'layers.append', 'LayerScale', 'PreNorm', 'execute_type', 'RotaryEmbedding', 'text_pos_emb', 'torch.cat', 'img_axial_pos_emb', 'broadcat', 'rearrange', 'self.register_buffer']",23
dalle_pytorch/transformer.py:Transformer:forward,Transformer:forward,method,2,5,5,57,11.4,0,0,"['self', 'x', '**kwargs']","[None, None, None]","[None, None, None]",53,[],['self.layers'],1
dalle_pytorch/vae.py:exists,exists,function,2,5,5,18,3.6,0,0,['val'],[None],[None],37,[],[],0
dalle_pytorch/vae.py:default,default,function,3,6,6,27,4.5,0,1,"['val', 'd']","[None, None]","[None, None]",40,[],['exists'],1
dalle_pytorch/vae.py:load_model,load_model,function,4,9,9,76,8.44,0,0,['path'],[None],[None],43,[],"['open', 'torch.load', 'torch.device']",3
dalle_pytorch/vae.py:map_pixels,map_pixels,function,1,6,6,21,3.5,0,0,"['x', 'eps ']","[None, None]","[None, ' 0.1']",47,[],[],0
dalle_pytorch/vae.py:unmap_pixels,unmap_pixels,function,2,8,8,40,5.0,0,0,"['x', 'eps ']","[None, None]","[None, ' 0.1']",50,[],['torch.clamp'],1
dalle_pytorch/vae.py:download,download,function,21,82,52,1102,13.44,1,6,"['url', 'filename ', 'root ']","[None, None, None]","[None, ' None', ' CACHE_PATH']",53,[],"['os.makedirs', 'default', 'RuntimeError', 'open', 'tqdm', 'source.read', 'output.write', 'loop.update', 'os.rename']",9
dalle_pytorch/vae.py:make_contiguous,make_contiguous,function,5,7,7,82,11.71,1,0,['module'],[None],[None],96,[],"['torch.no_grad', 'module.parameters', 'param.set_']",3
dalle_pytorch/vae.py:get_obj_from_str,get_obj_from_str,function,9,13,13,177,13.62,0,1,"['string', 'reload']","[None, None]","[None, 'False']",138,[],"['string.rsplit', 'importlib.import_module', 'importlib.reload', 'getattr']",4
dalle_pytorch/vae.py:instantiate_from_config,instantiate_from_config,function,3,14,14,145,10.36,0,1,['config'],[None],[None],145,[],"['KeyError', 'get_obj_from_str', 'dict']",3
dalle_pytorch/vae.py:OpenAIDiscreteVAE,OpenAIDiscreteVAE,class,29,79,58,707,8.95,0,0,[],[],[],103,[],[],0
dalle_pytorch/vae.py:VQGanVAE,VQGanVAE,class,53,166,125,1937,11.67,0,4,[],[],[],150,[],[],0
dalle_pytorch/vae.py:OpenAIDiscreteVAE:__init__,OpenAIDiscreteVAE:__init__,method,8,12,12,209,17.42,0,0,['self'],[None],[None],104,[],"['super', 'load_model', 'make_contiguous']",3
dalle_pytorch/vae.py:OpenAIDiscreteVAE:get_codebook_indices,OpenAIDiscreteVAE:get_codebook_indices,method,8,17,17,112,6.59,0,0,"['self', 'img']","[None, None]","[None, None]",116,[],"['map_pixels', 'torch.argmax', 'rearrange']",3
dalle_pytorch/vae.py:OpenAIDiscreteVAE:decode,OpenAIDiscreteVAE:decode,method,12,36,27,246,6.83,0,0,"['self', 'img_seq']","[None, None]","[None, None]",122,[],"['rearrange', 'int', 'F.one_hot', 'self.dec', 'unmap_pixels']",5
dalle_pytorch/vae.py:OpenAIDiscreteVAE:forward,OpenAIDiscreteVAE:forward,method,1,2,2,19,9.5,0,0,"['self', 'img']","[None, None]","[None, None]",132,[],[],0
dalle_pytorch/vae.py:VQGanVAE:__init__,VQGanVAE:__init__,method,28,56,51,904,16.14,0,1,"['self', 'vqgan_model_path', 'vqgan_config_path']","[None, None, None]","[None, 'None', 'None']",151,[],"['super', 'download', 'str', 'OmegaConf.load', 'instantiate_from_config', 'torch.load', 'model.load_state_dict', 'print', 'int', 'isinstance', 'self._register_external_parameters']",11
dalle_pytorch/vae.py:VQGanVAE:_register_external_parameters,VQGanVAE:_register_external_parameters,method,4,19,17,313,16.47,0,1,['self'],[None],[None],185,"['        """"""Register external parameters for DeepSpeed partitioning.""""""\n']",['distributed_utils.using_backend'],1
dalle_pytorch/vae.py:VQGanVAE:get_codebook_indices,VQGanVAE:get_codebook_indices,method,9,33,25,169,5.12,0,1,"['self', 'img']","[None, None]","[None, None]",116,"['        """"""Register external parameters for DeepSpeed partitioning.""""""\n']",['rearrange'],1
dalle_pytorch/vae.py:VQGanVAE:decode,VQGanVAE:decode,method,12,40,33,325,8.12,0,1,"['self', 'img_seq']","[None, None]","[None, None]",122,[],"['F.one_hot', 'rearrange', 'int']",3
dalle_pytorch/vae.py:VQGanVAE:forward,VQGanVAE:forward,method,1,2,2,19,9.5,0,0,"['self', 'img']","[None, None]","[None, None]",132,[],[],0
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend,DeepSpeedBackend,class,52,309,174,3209,10.39,0,8,[],[],[],9,[],[],0
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:wrap_arg_parser,DeepSpeedBackend:wrap_arg_parser,method,5,37,33,332,8.97,0,1,"['self', 'parser']","[None, None]","[None, None]",15,[],"['self.has_backend', 'parser.add_argument']",2
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_initialize,DeepSpeedBackend:_initialize,method,3,4,4,113,28.25,0,1,['self'],[None],[None],36,[],[],0
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_require_torch_distributed_init,DeepSpeedBackend:_require_torch_distributed_init,method,1,17,17,147,8.65,0,0,[],[],[],42,"['        """"""Raise an error when `torch.distributed` has not been\n', '        initialized yet.\n', '        """"""\n']",[],0
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_get_world_size,DeepSpeedBackend:_get_world_size,method,3,3,3,79,26.33,0,0,['self'],[None],[None],50,[],['self._require_torch_distributed_init'],1
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_get_rank,DeepSpeedBackend:_get_rank,method,3,3,3,73,24.33,0,0,['self'],[None],[None],54,[],['self._require_torch_distributed_init'],1
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_get_local_rank,DeepSpeedBackend:_get_local_rank,method,2,3,3,74,24.67,0,0,['self'],[None],[None],58,[],"['self._require_torch_distributed_init', 'int']",2
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_local_barrier,DeepSpeedBackend:_local_barrier,method,2,2,2,66,33.0,0,0,['self'],[None],[None],62,[],['self._require_torch_distributed_init'],1
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_check_args,DeepSpeedBackend:_check_args,method,6,14,9,165,11.79,0,0,"['self', 'args', 'optimizer', 'lr_scheduler', 'kwargs']","[None, None, None, None, None]","[None, None, None, None, None]",66,"['        """"""Return an appropriate optimizer and learning rate scheduler\n', '        after checking the values passed to `distribute`.\n', '        """"""\n']","['self._check_argvs', 'self._check_config']",2
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_check_argvs,DeepSpeedBackend:_check_argvs,method,9,66,49,516,7.82,0,3,"['self', 'args', 'optimizer', 'lr_scheduler', 'kwargs']","[None, None, None, None, None]","[None, None, None, None, None]",75,"['        """"""Apply several sanity checks to the given command\n', '        line arguments.\n', '        """"""\n']",['print'],1
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_check_config,DeepSpeedBackend:_check_config,method,9,83,44,590,7.11,0,3,"['self', 'args', 'optimizer', 'lr_scheduler', 'kwargs']","[None, None, None, None, None]","[None, None, None, None, None]",105,"['        """"""Return an appropriate optimizer and learning rate scheduler\n', '        for the DeepSpeed configuration.\n', '        """"""\n']","['open', 'json.load', 'print']",3
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_distribute,DeepSpeedBackend:_distribute,method,6,17,17,264,15.53,0,0,"['self', 'args', 'model', 'optimizer', 'model_parameters', 'training_data', 'lr_scheduler', '**kwargs', '']","[None, None, None, None, None, None, None, None, None]","[None, 'None', 'None', 'None', 'None', 'None', 'None', None, None]",135,[],['self._check_args'],1
dalle_pytorch/distributed_backends/deepspeed_backend.py:DeepSpeedBackend:_average_all,DeepSpeedBackend:_average_all,method,6,8,7,178,22.25,0,0,"['self', 'tensor']","[None, None]","[None, None]",165,[],"['self._require_torch_distributed_init', 'tensor.detach', 'self.get_world_size']",3
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend,DistributedBackend,class,47,193,117,2130,11.04,0,2,[],[],[],12,[],[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:__init__,DistributedBackend:__init__,method,3,18,11,165,9.17,0,2,['self'],[None],[None],42,[],['NotImplementedError'],1
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:has_backend,DistributedBackend:has_backend,method,4,9,8,114,12.67,0,0,['self'],[None],[None],48,"['        """"""Return whether the backend module is now imported.""""""\n']",['import_module'],1
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:check_batch_size,DistributedBackend:check_batch_size,method,2,17,17,133,7.82,0,0,"['self', 'batch_size']","[None, None]","[None, None]",56,"['        """"""Check whether the batch size makes sense for distribution.""""""\n']",['self.get_world_size'],1
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:wrap_arg_parser,DistributedBackend:wrap_arg_parser,method,1,2,2,24,12.0,0,0,"['self', 'parser']","[None, None]","[None, None]",62,"['        """"""Add arguments to support optional distributed backend usage.""""""\n']",[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:initialize,DistributedBackend:initialize,method,2,3,3,43,14.33,0,0,['self'],[None],[None],66,"['        """"""Initialize the distributed backend.""""""\n']",['self._initialize'],1
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:_initialize,DistributedBackend:_initialize,method,1,2,2,24,12.0,0,0,['self'],[None],[None],71,"['        """"""Initialize the distributed backend.""""""\n']",[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:require_init,DistributedBackend:require_init,method,1,25,24,177,7.08,0,0,['self'],[None],[None],75,"['        """"""Raise an error when the backend has not been initialized yet.""""""\n']",[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:get_world_size,DistributedBackend:get_world_size,method,3,3,3,48,16.0,0,0,['self'],[None],[None],82,"['        """"""Return the amount of distributed processes.""""""\n']","['self.require_init', 'self._get_world_size']",2
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:_get_world_size,DistributedBackend:_get_world_size,method,1,2,2,24,12.0,0,0,['self'],[None],[None],87,"['        """"""Return the amount of distributed processes.""""""\n']",[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:get_rank,DistributedBackend:get_rank,method,3,3,3,42,14.0,0,0,['self'],[None],[None],91,"['        """"""Return the global rank of the calling worker process.""""""\n']","['self.require_init', 'self._get_rank']",2
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:_get_rank,DistributedBackend:_get_rank,method,1,2,2,24,12.0,0,0,['self'],[None],[None],96,"['        """"""Return the global rank of the calling worker process.""""""\n']",[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:get_local_rank,DistributedBackend:get_local_rank,method,3,3,3,48,16.0,0,0,['self'],[None],[None],100,"['        """"""Return the local rank of the calling worker process.\n', ""        The local rank is the rank based on a single node's processes.\n"", '        """"""\n']","['self.require_init', 'self._get_local_rank']",2
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:_get_local_rank,DistributedBackend:_get_local_rank,method,1,2,2,24,12.0,0,0,['self'],[None],[None],107,"['        """"""Return the local rank of the calling worker process.\n', ""        The local rank is the rank based on a single node's processes.\n"", '        """"""\n']",[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:is_root_worker,DistributedBackend:is_root_worker,method,2,3,3,37,12.33,0,0,['self'],[None],[None],113,"['        """"""Return whether the calling worker has the root rank.""""""\n']",['self.get_rank'],1
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:is_local_root_worker,DistributedBackend:is_local_root_worker,method,2,3,3,43,14.33,0,0,['self'],[None],[None],117,"['        """"""Return whether the calling worker has the root rank on this node.""""""\n']",['self.get_local_rank'],1
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:local_barrier,DistributedBackend:local_barrier,method,2,2,2,41,20.5,0,0,['self'],[None],[None],121,"['        """"""Wait until all processes on this node have called this function.""""""\n']","['self.require_init', 'self._local_barrier']",2
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:_local_barrier,DistributedBackend:_local_barrier,method,1,2,2,24,12.0,0,0,['self'],[None],[None],126,"['        """"""Wait until all processes on this node have called this function.""""""\n']",[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:distribute,DistributedBackend:distribute,method,3,11,11,126,11.45,0,0,"['self', 'args', 'model', 'optimizer', 'model_parameters', 'training_data', 'lr_scheduler', '**kwargs', '']","[None, None, None, None, None, None, None, None, None]","[None, 'None', 'None', 'None', 'None', 'None', 'None', None, None]",130,[],"['self.require_init', 'self._distribute']",2
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:_distribute,DistributedBackend:_distribute,method,1,2,2,24,12.0,0,0,"['self', 'args', 'model', 'optimizer', 'model_parameters', 'training_data', 'lr_scheduler', '**kwargs', '']","[None, None, None, None, None, None, None, None, None]","[None, 'None', 'None', 'None', 'None', 'None', 'None', None, None]",155,"['        """"""Return a distributed model engine, optimizer, dataloader, and\n', '        learning rate scheduler. These are obtained by wrapping the\n', '        given values with the backend.\n', '        """"""\n']",[],0
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:average_all,DistributedBackend:average_all,method,3,3,3,51,17.0,0,0,"['self', 'tensor']","[None, None]","[None, None]",171,"['        """"""Return the average of `tensor` over all workers.""""""\n']","['self.require_init', 'self._average_all']",2
dalle_pytorch/distributed_backends/distributed_backend.py:DistributedBackend:_average_all,DistributedBackend:_average_all,method,1,2,2,24,12.0,0,0,"['self', 'tensor']","[None, None]","[None, None]",176,"['        """"""Return the average of `tensor` over all workers.""""""\n']",[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend,DummyBackend,class,15,53,37,542,10.23,0,0,[],[],[],4,[],[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:has_backend,DummyBackend:has_backend,method,1,2,2,10,5.0,0,0,['self'],[None],[None],15,[],[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:wrap_arg_parser,DummyBackend:wrap_arg_parser,method,2,2,2,12,6.0,0,0,"['self', 'parser']","[None, None]","[None, None]",18,[],[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:_initialize,DummyBackend:_initialize,method,0,1,1,4,4.0,0,0,['self'],[None],[None],21,[],[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:_get_world_size,DummyBackend:_get_world_size,method,1,2,2,7,3.5,0,0,['self'],[None],[None],24,[],[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:_get_rank,DummyBackend:_get_rank,method,2,2,2,20,10.0,0,0,['self'],[None],[None],27,[],[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:_get_local_rank,DummyBackend:_get_local_rank,method,2,2,2,20,10.0,0,0,['self'],[None],[None],30,[],[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:_local_barrier,DummyBackend:_local_barrier,method,0,1,1,4,4.0,0,0,['self'],[None],[None],33,[],[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:_distribute,DummyBackend:_distribute,method,1,5,5,50,10.0,0,0,"['self', '_args', 'model', 'optimizer', '_model_parameters', 'training_data', 'lr_scheduler', '**_kwargs', '']","[None, None, None, None, None, None, None, None, None]","[None, 'None', 'None', 'None', 'None', 'None', 'None', None, None]",36,"['        """"""Return the model, optimizer, dataloader, and learning rate scheduler\n', '        as is.\n', '        """"""\n']",[],0
dalle_pytorch/distributed_backends/dummy_backend.py:DummyBackend:_average_all,DummyBackend:_average_all,method,2,2,2,12,6.0,0,0,"['self', 'tensor']","[None, None]","[None, None]",51,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend,HorovodBackend,class,26,65,49,1014,15.6,0,1,[],[],[],6,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:wrap_arg_parser,HorovodBackend:wrap_arg_parser,method,2,2,2,12,6.0,0,0,"['self', 'parser']","[None, None]","[None, None]",12,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:check_batch_size,HorovodBackend:check_batch_size,method,0,1,1,4,4.0,0,0,"['self', 'batch_size']","[None, None]","[None, None]",15,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:_initialize,HorovodBackend:_initialize,method,3,4,4,101,25.25,0,1,['self'],[None],[None],20,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:_get_world_size,HorovodBackend:_get_world_size,method,2,2,2,32,16.0,0,0,['self'],[None],[None],25,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:_get_rank,HorovodBackend:_get_rank,method,2,2,2,32,16.0,0,0,['self'],[None],[None],28,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:_get_local_rank,HorovodBackend:_get_local_rank,method,2,2,2,38,19.0,0,0,['self'],[None],[None],31,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:_local_barrier,HorovodBackend:_local_barrier,method,1,1,1,26,26.0,0,0,['self'],[None],[None],34,[],[],0
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:_distribute,HorovodBackend:_distribute,method,5,13,11,282,21.69,0,0,"['self', '_args', 'model', 'optimizer', '_model_parameters', 'training_data', 'lr_scheduler', '**_kwargs', '']","[None, None, None, None, None, None, None, None, None]","[None, 'None', 'None', 'None', 'None', 'None', 'None', None, None]",38,[],['model.state_dict'],1
dalle_pytorch/distributed_backends/horovod_backend.py:HorovodBackend:_average_all,HorovodBackend:_average_all,method,3,4,3,61,15.25,0,0,"['self', 'tensor']","[None, None]","[None, None]",55,[],[],0
